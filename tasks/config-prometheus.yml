---
- name: "Set promtool flags based on version"
  block:
  - set_fact:
      promtool_check_config_cmd: 'promtool check-config'

  - set_fact:
      promtool_check_rules_cmd: 'promtool check-rules'
  when: prometheus_version |  version_compare('1.8.1', operator='<=')

- block:
  - set_fact:
      promtool_check_config_cmd: 'promtool check config'

  - set_fact:
      promtool_check_rules_cmd: 'promtool check rules'
  when: prometheus_version |  version_compare('1.8.1', operator='>')

- debug:
    var: promtool_check_config_cmd

- block:
  - name: "crate additional directories"
    file:
      path: "{{ dirname }}"
      state: directory
      owner: "{{ prometheus_user }}"
      group: "{{ prometheus_group }}"
      mode: 0755
    with_items:
      - "{{ prometheus_file_sd_config_path }}"
      - "{{ prometheus_rules_dir }}"
      - "{{ prometheus_alertmanager_templates_path }}"
    loop_control:
      loop_var: dirname

  - name: "set prometheus service"
    template:
      src: prometheus.service.j2
      dest: "{{ prometheus_systemd_dir }}/prometheus.service"
    notify:
      - reload prometheus
    when: prometheus_installation_method != 'docker'
  
  become: yes

- block:
  - name: "Set prometheus_rule_files [=>2.0.0]"
    set_fact:
      prometheus_rule_files:
        sample_alerts:
          src:  sample_alert.rules.yml
          dest: sample_alert.rules.yml
    when: prometheus_version |  version_compare('2.0.0', operator='>=')

  - name: "Set prometheus_rule_files [=<1.8.1]"
    set_fact:
      prometheus_rule_files:
        sample_alerts:
          src:  sample_alert.rules
          dest: sample_alert.rules
    when: prometheus_version | version_compare('2.0.0', operator='>=')
  when: prometheus_rule_files == ''

#- name: "Copy rule files from playbook's, if any"
#  copy:
#    src: "{{ rule.value.src }}"
#    dest: "{{ prometheus_rules_dir }}/{{ rule.value.dest }}"
#    validate: "{{ promtool_check_rules_cmd }} %s"
#  with_dict: '{{ prometheus_rule_files }}'
#  loop_control:
#      loop_var: rule
#  when: promehtues_use_role_rules

- name: "Create sd_files"
  include: sd-create.yml
  vars:
    args: "{{ sd }}"
  with_items: '{{ prometheus_static_targets }}'
  loop_control:
    loop_var: sd
  when: prometheus_static_targets is defined

- block:
  - name: "set prometheus config yml"
    template:
      src: prometheus.yml.j2
      dest: "{{ prometheus_opt_config_file }}"
      owner: "{{ prometheus_user }}"
      group: "{{ prometheus_group }}"
      validate: "{{ promtool_check_config_cmd }} %s"
  become: yes

