---
- name: "platform-suffix amd64"
  set_fact:
    prometheus_linux_suffix: "{{ ansible_system }}-amd64"
  when: ansible_userspace_bits == 64

- name: "platform-suffix i386"
  set_fact:
    prometheus_linux_suffix: "{{ ansible_system }}-386"
  when: ansible_userspace_bits == 32

- block:
  - name: "Check prometheus version"
    shell: "{{ prometheus_install_path }}/prometheus-{{ prometheus_version }}.{{ prometheus_linux_suffix }}/prometheus --version 2>&1 | grep -o 'prometheus, version {{ prometheus_version }}'"
    register: prometheus_vercheck
    changed_when: false
    ignore_errors: true
    when: "'prometheus' in prometheus_components"

  - name: "Check alertmanager version"
    shell: "{{ prometheus_install_path }}/alertmanager-{{ prometheus_alertmanager_version }}.{{ prometheus_linux_suffix }}/alertmanager --version 2>&1 | grep -o 'alertmanager, version {{ prometheus_alertmanager_version }}'"
    register: alertmanager_vercheck
    changed_when: false
    ignore_errors: true
    when: "'alertmanager' in prometheus_components"

  - name: "Check node_exporter version"
    shell: "{{ prometheus_install_path }}/node_exporter-{{ prometheus_node_exporter_version }}.{{ prometheus_linux_suffix }}/node_exporter --version 2>&1 | grep -o 'node_exporter, version {{ prometheus_node_exporter_version }}'"
    register: node_exporter_vercheck
    changed_when: false
    ignore_errors: true
    when: "'node_exporter' in prometheus_components"

  - name: "Check pushgateway version"
    shell: "{{ prometheus_install_path }}/-{{ prometheus_pushgateway_version }}.{{ prometheus_linux    _suffix }}/pushgateway --version 2>&1 | grep -o 'pushgateway, version {{ prometheus_pushgateway_version }}'"
    register: pushgateway_vercheck
    changed_when: false
    ignore_errors: true
    when: "'pushgateway' in prometheus_components"

  become: yes

- debug:
    var: node_exporter_vercheck
    verbosity: 2

- block:
    - name: "Create Prometheus group"
      group:
        name: "{{ prometheus_group }}"
        state: present

    - name: "Create Prometheus user"
      user:
        name: "{{ prometheus_user }}"
        group: "{{ prometheus_group }}"
        home: "{{ prometheus_home_dir }}"
        shell: /sbin/nologin
        state: present

    - name: "Create prometheus config directory"
      file:
        state: directory
        dest: "{{ dir }}"
        owner: "{{ prometheus_user }}"
        group: "{{ prometheus_group }}"
        mode: 0750
      with_items:
        - "{{ prometheus_storage_local_path }}"
        - "{{ prometheus_conf_dir }}"
        - "{{ prometheus_install_path }}"
      loop_control:
        loop_var: dir

  become: yes


- name: "Download and untar prometheus release - {{ prometheus_version }}"
  unarchive:
    src: "{{ prometheus_pkg_url }}"
    dest: "{{ prometheus_install_path }}"
    copy: no
  when:
    - '"prometheus" in prometheus_components'
    - 'prometheus_vercheck|failed'
    - 'prometheus_version not in prometheus_vercheck.stderr'
  become: yes

- name: "Download and untar alertmanager release - {{ prometheus_alertmanager_version }}"
  unarchive:
    src: "{{ prometheus_alertmanager_pkg_url }}"
    dest: "{{ prometheus_install_path }}"
    copy: no
  when:
    - '"alertmanager" in prometheus_components'
    - 'alertmanager_vercheck|failed'
    - 'prometheus_alertmanager_version not in alertmanager_vercheck.stderr'
  become: yes

- name: "Download and untar node_exporter release - {{ prometheus_node_exporter_version }}"
  unarchive:
    src: "{{ prometheus_node_exporter_pkg_url }}"
    dest: "{{ prometheus_install_path }}"
    copy: no
  when:
    - '"node_exporter" in prometheus_components'
    - 'node_exporter_vercheck|failed'
    - 'prometheus_node_exporter_version not in node_exporter_vercheck.stderr'
  become: yes

- name: "Download and untar pushgateway release - {{ prometheus_pushgateway_version }}"
  unarchive:
    src: "{{ prometheus_pushgateway_pkg_url }}"
    dest: "{{ prometheus_install_path }}"
    copy: no
  when:
    - '"pushgateway" in prometheus_components'
    - 'pushgateway_vercheck|failed'
    - 'prometheus_pushgateway_version not in pushgateway_vercheck.stderr'
  become: yes

- name: "Download and untar crate_adapter release - {{ prometheus_crate_adapter_version }}"
  unarchive:
    src: "{{ prometheus_crate_adapter_pkg_url }}"
    dest: "{{ prometheus_install_path }}"
    copy: no
  when: '"crate_adapter" in prometheus_components'
  become: yes

- name: "Create links for promehtus binary"
  file:
    state: link
    dest: /usr/bin/{{ binary }}
    src: "{{ prometheus_install_path }}/prometheus-{{ prometheus_version }}.{{ prometheus_linux_suffix }}/{{ binary }}"
  with_items:
    - prometheus
    - promtool
  loop_control:
    loop_var: binary
  when: "'prometheus' in prometheus_components"
  become: yes

- name: "Create links for alertmanager binary"
  file:
    state: link
    dest: /usr/bin/{{ binary }}
    src: "{{ prometheus_install_path }}/alertmanager-{{ prometheus_alertmanager_version }}.{{ prometheus_linux_suffix }}/{{ binary }}"
  with_items:
    - alertmanager
    - amtool
  loop_control:
    loop_var: binary
  when: "'alertmanager' in prometheus_components"
  become: yes

- name: "Create links for node_exporter binary"
  file:
    state: link
    dest: /usr/bin/node_exporter
    src: "{{ prometheus_install_path }}/node_exporter-{{ prometheus_node_exporter_version }}.{{ prometheus_linux_suffix }}/node_exporter"
  when: "'node_exporter' in prometheus_components"
  become: yes

- name: "Create links for pushgateway binary"
  file:
    state: link
    dest: /usr/bin/pushgateway
    src: "{{ prometheus_install_path }}/pushgateway-{{ prometheus_pushgateway_version }}.{{ prometheus_linux_suffix }}/pushgateway"
  when: "'pushgateway' in prometheus_components"
  become: yes

- name: "Create links for node_exporter binary"
  file:
    state: link
    dest: /usr/bin/crate_adapter
    src: "{{ prometheus_install_path }}/crate_adapter"
  when: "'crate_adapter' in prometheus_components"
  become: yes
